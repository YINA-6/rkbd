/*
Navicat MySQL Data Transfer

Source Server         : localhost_3306
Source Server Version : 50736
Source Host           : localhost:3306
Source Database       : rkzt

Target Server Type    : MYSQL
Target Server Version : 50736
File Encoding         : 65001

Date: 2023-02-05 21:23:37
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `category`
-- ----------------------------
DROP TABLE IF EXISTS `category`;
CREATE TABLE `category` (
  `id` int(2) NOT NULL AUTO_INCREMENT COMMENT '知识点分类-序号',
  `category_name` varchar(255) NOT NULL COMMENT '知识点分类',
  `subject` int(2) NOT NULL COMMENT '关联 subjectTabel_id',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of category
-- ----------------------------
INSERT INTO `category` VALUES ('1', '计算机系统基础知识', '7');
INSERT INTO `category` VALUES ('2', '网络与信息安全基础知识', '7');
INSERT INTO `category` VALUES ('3', '知识产权基础知识', '7');
INSERT INTO `category` VALUES ('4', '多媒体基础知识', '7');
INSERT INTO `category` VALUES ('5', '结构化分析与设计知识', '7');
INSERT INTO `category` VALUES ('6', '软件工程基础知识', '7');
INSERT INTO `category` VALUES ('7', '程序设计语言基础知识', '7');
INSERT INTO `category` VALUES ('8', '操作系统知识', '7');
INSERT INTO `category` VALUES ('9', '杂项', '7');

-- ----------------------------
-- Table structure for `employee`
-- ----------------------------
DROP TABLE IF EXISTS `employee`;
CREATE TABLE `employee` (
  `id` int(10) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `name` varchar(32) COLLATE utf8_bin NOT NULL COMMENT '姓名',
  `username` varchar(32) COLLATE utf8_bin NOT NULL COMMENT '用户名',
  `password` varchar(64) COLLATE utf8_bin NOT NULL COMMENT '密码',
  `phone` varchar(11) COLLATE utf8_bin NOT NULL COMMENT '手机号',
  `sex` varchar(2) COLLATE utf8_bin NOT NULL COMMENT '性别',
  `id_number` varchar(18) COLLATE utf8_bin NOT NULL COMMENT '身份证号',
  `status` int(11) NOT NULL DEFAULT '1' COMMENT '状态 0:禁用，1:正常',
  `create_time` datetime NOT NULL COMMENT '创建时间',
  `update_time` datetime NOT NULL COMMENT '更新时间',
  `create_user` bigint(20) NOT NULL COMMENT '创建人',
  `update_user` bigint(20) NOT NULL COMMENT '修改人',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `idx_username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COLLATE=utf8_bin COMMENT='员工信息';

-- ----------------------------
-- Records of employee
-- ----------------------------
INSERT INTO `employee` VALUES ('1', '管理员', 'admin', 'e10adc3949ba59abbe56e057f20f883e', '13812312312', '1', '1101011990010100xx', '1', '2022-05-06 17:20:07', '2022-11-21 15:47:43', '1', '1');
INSERT INTO `employee` VALUES ('2', '测试账号', 'guest', 'e10adc3949ba59abbe56e057f20f883e', '15922224444', '1', '4408812000066644xx', '1', '2022-06-07 12:30:55', '2022-11-21 15:47:35', '1', '1');

-- ----------------------------
-- Table structure for `provinces`
-- ----------------------------
DROP TABLE IF EXISTS `provinces`;
CREATE TABLE `provinces` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `registration` varchar(255) NOT NULL,
  `test` varchar(255) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=440001 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of provinces
-- ----------------------------
INSERT INTO `provinces` VALUES ('110000', '北京', '2022-08-29~2022-09-07', '2022-11-05');
INSERT INTO `provinces` VALUES ('120000', '天津', '2022-08-26~2022-09-02', '2022-11-05');
INSERT INTO `provinces` VALUES ('130000', '河北', '2022-08-26~2022-09-02', '2022-11-05');
INSERT INTO `provinces` VALUES ('140000', '山西', '2022-08-21~2022-09-12', '2022-11-05');
INSERT INTO `provinces` VALUES ('150000', '内蒙古', '2022-08-19~2022-08-30', '2022-11-05');
INSERT INTO `provinces` VALUES ('160000', '宁波', '2022-08-25~2022-08-31', '2022-11-05');
INSERT INTO `provinces` VALUES ('170000', '辽宁', '2022-08-16~2022-08-25', '2022-11-05');
INSERT INTO `provinces` VALUES ('180000', '吉林', '2022-08-19~2022-08-31', '2022-11-05');
INSERT INTO `provinces` VALUES ('190000', '黑龙江', '2022-08-24~2022-08-30', '2022-11-05');
INSERT INTO `provinces` VALUES ('200000', '大连', '2022-08-16~2022-09-08', '2022-11-05');
INSERT INTO `provinces` VALUES ('210000', '上海', '2022-08-23~2022-08-31', '2022-11-05');
INSERT INTO `provinces` VALUES ('220000', '江苏', '2022-09-01~2022-09-09', '2022-11-05');
INSERT INTO `provinces` VALUES ('230000', '浙江', '2022-09-05~2022-09-09', '2022-11-05');
INSERT INTO `provinces` VALUES ('240000', '安徽', '2022-08-16~2022-08-23', '2022-11-05');
INSERT INTO `provinces` VALUES ('250000', '福建', '2022-08-20~2022-08-26', '2022-11-05');
INSERT INTO `provinces` VALUES ('260000', '江西', '2022-08-15~2022-09-08', '2022-11-05');
INSERT INTO `provinces` VALUES ('270000', '山东', '2022-08-17~2022-08-31', '2022-11-05');
INSERT INTO `provinces` VALUES ('280000', '河南', '2022-08-18~2022-09-02', '2022-11-05');
INSERT INTO `provinces` VALUES ('290000', '湖北', '2022-08-24~2022-08-31', '2022-11-05');
INSERT INTO `provinces` VALUES ('300000', '湖南', '2022-08-29~2022-09-08', '2022-11-05');
INSERT INTO `provinces` VALUES ('310000', '广东', '2022-08-17~2022-08-25', '2022-11-05');
INSERT INTO `provinces` VALUES ('320000', '广西', '2022-08-16~2022-08-24', '2022-11-05');
INSERT INTO `provinces` VALUES ('330000', '海南', '2022-08-29~2022-09-08', '2022-11-05');
INSERT INTO `provinces` VALUES ('340000', '重庆', '2022-08-29~2022-09-09', '2022-11-05');
INSERT INTO `provinces` VALUES ('350000', '四川', '2022-08-15~2022-09-05', '2022-11-05');
INSERT INTO `provinces` VALUES ('360000', '贵州', '2022-08-18~2022-09-09', '2022-11-05');
INSERT INTO `provinces` VALUES ('370000', '云南', '2022-08-25~2022-09-04', '2022-11-05');
INSERT INTO `provinces` VALUES ('380000', '西藏', '2022-08-20~2022-09-06', '2022-11-05');
INSERT INTO `provinces` VALUES ('390000', '陕西', '2022-09-01~2022-09-07', '2022-11-05');
INSERT INTO `provinces` VALUES ('400000', '甘肃', '2022-08-22~2022-08-31', '2022-11-05');
INSERT INTO `provinces` VALUES ('410000', '青海', '2022-08-26~2022-09-05', '2022-11-05');
INSERT INTO `provinces` VALUES ('420000', '宁夏', '2022-08-19~2022-08-30', '2022-11-05');
INSERT INTO `provinces` VALUES ('430000', '新疆', '2022-08-17~2022-09-12', '2022-11-05');
INSERT INTO `provinces` VALUES ('440000', '新疆兵团', '2022-08-18~2022-09-09', '2022-11-05');

-- ----------------------------
-- Table structure for `storage`
-- ----------------------------
DROP TABLE IF EXISTS `storage`;
CREATE TABLE `storage` (
  `id` int(3) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `subject` int(3) NOT NULL COMMENT '科目 关联 subjectTbale_id',
  `qid` varchar(255) NOT NULL COMMENT '年份-年次（0上 1下）-题号 ',
  `type` varchar(2) NOT NULL COMMENT '题型 00 综合单选 01综合多选 10 案例题 11 论文',
  `question` varchar(255) NOT NULL COMMENT '题目',
  `options` varchar(500) NOT NULL COMMENT '选项',
  `result` varchar(255) NOT NULL COMMENT '答案',
  `analysis` varchar(255) DEFAULT NULL COMMENT '解析',
  `category_id` int(2) DEFAULT NULL COMMENT '知识点分类',
  `photo` varchar(255) DEFAULT NULL COMMENT '附图',
  PRIMARY KEY (`id`),
  KEY `foreign-category` (`category_id`),
  CONSTRAINT `foreign-category` FOREIGN KEY (`category_id`) REFERENCES `category` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=73 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of storage
-- ----------------------------
INSERT INTO `storage` VALUES ('1', '7', '2017001', '00', 'CPU执行算术运算或者逻辑运算时，常将源操作数和结果暂存在（1）中。', '程序计数器（PC）,累加器（AC）,指令寄存器（IR）,地址寄存器（AR）', 'B', 'CPU中常设置多个寄存器，其中，程序计数器的作用是保存待读取指令在内存中的地址，累加器是算逻运算单元中用来暂存源操作数和计算结果的寄存器，指令寄存器暂存从内存读取的指令，地址寄存器暂存要访问的内存单元的地址。', '1', '');
INSERT INTO `storage` VALUES ('2', '7', '2017002', '00', '要判断字长为16位的整数a的低四位是否全为0，则（2）。', '将a与0x000F进行逻辑与运算，然后判断运算结果是否等于0,将a与0x000F进行“逻辑或运算，然后判断运算结果是否等于F,将a与0xFFFO进行“逻辑异或运算，然后判断运算结果是否等于0,将a与0xFFFO进行“逻辑与运算，然后判断运算结果是否等于F', 'A', '将整数a与0×000F4进行“逻辑与运算，则运算结果中高12位都为0，而低4位则完全是a的低4位，所以“逻辑与运算的结果为0，则说明a的低4位为0。', '1', '');
INSERT INTO `storage` VALUES ('3', '7', '2017003', '00', '计算机系统中常用的输入/输出控制方式有无条件传送、中断、程序查询和DMA方式等。当采用（3）方式时，不需要CPU执行程序指令来传送数据。', '中断,程序查询,无条件传送,DMA', 'D', '中断方式、程序查询方式和无条件传送方式都是通过CPU执行程序指令来传送数据的，DMA方式下是由DMA控制器直接控制数据的传送过程，CPU需要让出对总线的控制权，并不需要CPU执行程序指令来传送数据。', '1', '');
INSERT INTO `storage` VALUES ('4', '7', '2017004', '00', '某系统由下图所示的冗余部件构成。若每个部件的千小时可靠度都为R，则该系统的千小时可靠度为（4）。', '（1-R3）（1-R2）,（1-（1-R3））（1-（1-R）2）,（1-R3）+（1-R2）,（1-（1-R）3）+（1-（1-R）2）', 'B', '可靠度为R1和R2的两个部件并联后的可靠度为（1-（1-R1）（1-R2）），这两个部件串联后的可靠度为R1R2，因此图中所示系统的可靠度为（1-（1-R）3）（1-（（1-R）2）。', '1', '7a51c5d8-c095-4dcc-a10d-6a1690381ce2.png');
INSERT INTO `storage` VALUES ('5', '7', '2017005', '00', '已知数据信息为16位，最少应附加（5）位校验位，才能实现海明码纠错。', '3,4,5,6', 'C', '设数据位是n位，校验位是k位，则海明码中n和k必须满足以下关系：2-1>n+k。\n若n=16，则k为5时可满足25>16+5。', '1', '');
INSERT INTO `storage` VALUES ('6', '7', '2017006', '00', '以下关于Cache（高速缓冲存储器）的叙述中，不正确的是（6）。', 'Cache的设置扩大了主存的容量,Cache的内容是主存部分内容的拷贝,Cache的命中率并不随其容量增大线性地提高,Cache位于主存与CPU之间', 'A', '高速缓存（Cache）是随着CPU与主存之间的性能差距不断增大而引入的，其速度比主存快得多，所存储的内容是CPU近期可能会需要的信息，是主存内容的副本，因此CPU需要访问数据和读取指令时要先访问Cache，若命中则直接访问，若不命中再去访问主存。', '1', '');
INSERT INTO `storage` VALUES ('7', '7', '2017007', '00', 'HTTPS使用（7）协议对报文进行封装。', 'SSH,SSL ,SHA-1,SET', 'B', 'HTTPS（Hyper Text Transfer Protocol over Secure Socket Layer）是以安全为目标的HTTP通道，即使用SSL加密算法的HTTP。', '2', '');
INSERT INTO `storage` VALUES ('8', '7', '2017008', '00', '以下加密算法中适合对大量的明文消息进行加密传输的是（8）。', 'RSA,SHA-1,MD5,RC5', 'D', 'RSA是一种非对称加密算法，由于加密和解密的密钥不同，因此便于密钥管理和分发，同时在用户或者机构之间进行身份认证方面有较好的应用；SHA-1是一种安全散列算法，常用于对接收到的明文输入产生固定长度的输出，来确保明文在传输过程中不会被篡改；MD5是一种使用最为广泛的报文摘要算法；RC5是一种用于对明文进行加密的算法，在加密速度和强度上，均较为合适，适用于大量明文进行加密并传输。', '2', '');
INSERT INTO `storage` VALUES ('9', '7', '2017009', '00', '假定用户A、B分别在I1和I2两个CA处取得了各自的证书，下面（9）是A、B互信的必要条件。', 'A、B互换私钥,A、B互换公钥,I1、I2互换私钥,I1、I2互换公钥', 'D', '用户可在一定的认证机构（CA）处取得各自能够认证自身身份的数字证书，与该用户在同一机构取得的数字证书可通过相互的公钥认证彼此的身份；当两个用户所使用的证书来自于不同的认证机构时，用户双方要相互确定对方的身份之前，首先需要确定彼此的证书颁发机构的可信度。即两个CA之间的身份认证，需交换两个CA的公钥以确定CA的合法性，然后再进行用户的身份认证。', '2', '');
INSERT INTO `storage` VALUES ('10', '7', '2017010', '00', '甲软件公司受乙企业委托安排公司软件设计师开发了信息系统管理软件，由于在委托开发合同中未对软件著作权归属作出明确的约定，所以该信息系统管理软件的著作权由（10）享有。', '甲,乙,甲与乙共同,软件设计师', 'A', '接受他人委托开发的软件，一般也是由委托人与受托人签订书面合同约定该软件著作权的归属；如无书面合同或者合同未作明确约定的，则著作权人由受托人享有。', '3', '');
INSERT INTO `storage` VALUES ('11', '7', '2017011', '00', '根据我国商标法，下列商品中必须使用注册商标的是（11）。', '医疗仪器,墙壁涂料,无糖食品,烟草制品', 'D', '我国商标法第六条规定：“国家规定必须使用注册商标的商品，必须申请商标注册，未经核准注册的，不得在市场销售。\n目前根据我国法律法规的规定必须使用注册商标的是烟草类商品。', '9', '');
INSERT INTO `storage` VALUES ('12', '7', '2017012', '00', '甲、乙两人在同一天就同样的发明创造提交了专利申请，专利局将分别向各申请人通报有关情况，并提出多种可能采用的解决办法。下列说法中，不可能采用（12）。', '甲、乙作为共同申请人,甲或乙一方放弃权利并从另一方得到适当的补偿,甲、乙都不授予专利权,甲、乙都授予专利权', 'D', '专利权是一种具有财产权属性的独占权以及由其衍生出来和相应处理权。专利权人的权利包括独占实施权、转让权、实施许可权、放弃权和标记权等。专利权人对其拥有的专利权享有独占或排他的权利，未经其许可或者出现法律规定的特殊情况，任何人不得使用，否则即构成侵权。这是专利权（知识产权）最重要的法律特点之一。', '3', '');
INSERT INTO `storage` VALUES ('13', '7', '2017013', '00', '数字语音的采样频率定义为8kHz，这是因为（13）。', '语音信号定义的频率最高值为4kHz,语音信号定义的频率最高值为8kHz,数字语音传输线路的带宽只有8kHz,一般声卡的采样频率最高为每秒8千次', 'A', '语音信号频率范围是300Hz~3.4kHz，也就是不超过4kHz，按照奈奎斯特定律，要保持话音抽样以后再恢复时不失真，最低抽样频率是2倍的最高频率，即8kHz就可以保证信号能够正确恢复，因此将数字语音的采样频率定义为8kHz。', '4', '');
INSERT INTO `storage` VALUES ('14', '7', '2017014', '00', '使用图像扫描仪以300DPI的分辨率扫描一幅3×4平方英寸的图片，可以得到（14）像素的数字图像。', '300×300,300×400,900×4,900×1200', 'D', '3*300*4*300=900*1200。', '4', '');
INSERT INTO `storage` VALUES ('15', '7', '201701516', '01', '在采用结构化开发方法进行软件开发时，设计阶段接口设计主要依据需求分析阶段的（15）。接口设计的任务主要是（16）。', '数据流图,E-R图,状态-迁移图,加工规格说明,定义软件的主要结构元素及其之间的关系,确定软件涉及的文件系统的结构及数据库的表结构,描述软件与外部环境之间的交互关系，软件内模块之间的调用关系,确定软件各个模块内部的算法和数据结构试题', 'A,C', '结构化分析的输出是结构化设计的输入，设计活动依据分析结果进行。接口设计是描述软件与外部环境之间的交互关系，软件内模块之间的调用关系，而这些关系的依据主要是分析阶段的数据流图。', '5', '');
INSERT INTO `storage` VALUES ('16', '7', '201701718', '01', '某软件项目的活动图如下图所示，其中顶点表示项目里程碑，连接顶点的边表示包含的活动，边上的数字表示活动的持续时间（天），则完成该项目的最少时间为（17）天。活动BD和HK最早可以从第（18）天开始。（活动AB、AE和AC最早从第1天开始）', '17,18,19,20,3和10,4和11,3和9,4和10', 'D,B', '根据上图计算出关键路径为A-B-D-I-J-L，其长度为20。活动弧BD对应的活动的最早开始时间为第4天。活动弧HK对应活动的最早开始时间为第11天。', '6', '3cbfa4f2-26ee-4ccc-b7bb-31d7a298845b.png');
INSERT INTO `storage` VALUES ('17', '7', '2017019', '00', '在进行软件开发时，采用无主程序员的开发小组，成员之间相互平等；而主程序员负责制的开发小组，由一个主程序员和若干成员组成，成员之间没有沟通。在一个由8名开发人员构成的小组中，无主程序员组和主程序员组的沟通路径分别是（19）。', '32和8,32和7,28和8,28和7', 'D', '无主程序员组的开发小组，每两个开发人员之间都有沟通路径，因此，8人组成的开发小组沟通路径为完全连通无向图的边数，即m=n（n-1）/2，其中n和m分别表示图的顶点数和边数。当n=8时，m=28。主程序员组中，除了主程序员外的每个开发人员只能和主程序员沟通，因此8人组成的开发小组的沟通路径8-1=7。', '6', '');
INSERT INTO `storage` VALUES ('18', '7', '2017020', '00', '在高级语言源程序中，常需要用户定义的标识符为程序中的对象命名，常见的命名对象有（20）。①关键字（或保留字）②变量③函数④数据类型⑤注释', '①②③ ,②③④ ,①③⑤ ,②④⑤', 'B', '在源程序中，可由用户（程序员）为变量、函数和数据类型等命名。', '7', '');
INSERT INTO `storage` VALUES ('19', '7', '2017021', '00', '在仅由字符a、b构成的所有字符串中，其中以b结尾的字符串集合可用正规式表示为（21）。', '（b|ab）*b,（ab*）*b,a*b*b,（a|b）*b', 'D', '', '7', '');
INSERT INTO `storage` VALUES ('20', '7', '2017022', '00', '在以阶段划分的编译过程中，判断程序语句的形式是否正确属于（22）阶段的工作。', '词法分析,语法分析,语义分析,代码生成', 'B', '语法分析是分析语句及程序的结构是否符合语言定义的规范，对于语法正确的语句，语义分析是判断语句的含义是否正确，因此判断语句的形式是否正确是语法分析阶段的工作。', '7', '');
INSERT INTO `storage` VALUES ('21', '7', '2017023', '00', '某文件管理系统在磁盘上建立了位示图（bitmap），记录磁盘的使用情况。若计算机系统的字长为32位，磁盘的容量为300GB，物理块的大小为4MB，那么位示图的大小需要（23）个字。', '1200,2400,6400,9600', 'B', '根据题意，计算机系统中的字长为32位，每位可以表示一个物理块的“使用还是“未用，一个字可记录32个物理块的使用情况。又因为磁盘的容量为300GB，物理块的大小为4MB，那么该磁盘有300*1024/4=76800个物理块，位示图的大小为76800/32=2400个字。', '8', '');
INSERT INTO `storage` VALUES ('22', '7', '2017024', '00', '某系统中有3个并发进程竞争资源R，每个进程都需要5个R，那么至少有（24）个R，才能保证系统不会发生死锁。', '12,13,14,15', 'B', '选项A是错误的，假设系统为每个进程分配了4个资源，资源剩余数为0，导致这3个进程互相都要求对方占用的资源而无法继续运行，产生死锁。对于选项B，系统为每个进程分配了4个资源，还剩余1个，能保证3个进程中的一个进程运行完毕。当该进程释放其占有的资源，系统可用资源数为5个，能保证未完成的2个进程分别得到1个资源而运行完毕，故不会发生死锁。选项C和选项D虽然不会使系统发生死锁，但不满足“那么至少有几个该类资源，才能保证系统不会发生死锁的题意。', '8', '');
INSERT INTO `storage` VALUES ('23', '7', '2017025', '00', '某计算机系统页面大小为4K，进程的页面变换表如下所示。若进程的逻辑地址为2D16H。该地址经过变换后，其物理地址应为（25）', '2048H,4096H,4D16H,6D16H', 'C', '根据题意，页面大小为4K，逻辑地址2D16H所在页号为2，页内地址为D16H，查页表后可知物理块号为4，该地址经过变换后，其物理地址应为物理块号4拼接上页内地址D16H，即十六进制4D16H。', '8', '66e67369-50bb-4fb7-9c1f-af94b0d154af.png');
INSERT INTO `storage` VALUES ('24', '7', '20170262728', '01', '若用PV操作控制进程P1、P2、P3、P4和P5并发执行的过程，需要设置5个信号量S1、S2、S3、S4和S5，且信号量S1~S5的初值都等于零。如下的进程执行图中a和b处应分别填写（26）；c和d处应分别填写（27），e和f处应分别填写（28）。', 'V（S1）和P（S2）V（S3）,P（S1）和V（S2）V（S3）,V（S1）和V（S2）V（S3）,P（S1）和P（S2）V（S3）,P（S2）和P（S4）,V（S2）和P（S4）,P（S2）和V（S4）,V（S2）和V（S4）,P（S4）和V（S5）,V（S5）和P（S4）,V（S4）和P（S5）,V（S4）和V（S5）', 'B,C,A', '', '6', '4c237273-7fca-4a9f-bd0a-43c2970bb8d5.png');
INSERT INTO `storage` VALUES ('25', '7', '2017029', '00', '以下关于螺旋模型的叙述中，不正确的是（29）。', '它是风险驱动的，要求开发人员必须具有丰富的风险评估知识和经验,它可以降低过多测试或测试不足带来的风险,它包含维护周期，因此维护和开发之间没有本质区别,它不适用于大型软件开发', 'D', '螺旋模型是一个风险驱动的过程模型，因此要求开放人员必须具有丰富的风险评估知识和经验，否则因为忽视或过于重视风险造成问题。在对测试风险评估后，可以降低过多测试或测试不足带来的风险。而且，螺旋模型是一个迭代的模型，维护阶段是其中的一个迭代。螺旋模型适用于大规模的软件项目开发。', '6', '');
INSERT INTO `storage` VALUES ('26', '7', '2017030', '00', '以下关于极限编程（XP）中结对编程的叙述中，不正确的是（30）。', '支持共同代码拥有和共同对系统负责,承担了非正式的代码审查过程,代码质量更高,编码速度更快', 'D', '敏捷开发方法是一个强调灵活性和快速开发的一种开发方法，有多种具体的方法，其中极限编程是敏捷方法中最普遍的一种方法。极限编程包含12个实践操作。其中，集体所有权表示任何开发人员可以对系统任何部分进行改变，结对编程实际上存在一个非正式的代码审查过程，可以获得更高的代码质量。据统计，结对编程的编码速度与传统的单人编程相当。', '6', '');
INSERT INTO `storage` VALUES ('27', '7', '2017031', '00', '以下关于C/S（客户机/服务器）体系结构的优点的叙述中，不正确的是（31）。', '允许合理地划分三层的功能，使之在逻辑上保持相对独立性,允许各层灵活地选用平台和软件,各层可以选择不同的开发语言进行并行开发,系统安装、修改和维护均只在服务器端进行', 'D', '三层C/S体系结构由逻辑上相互分离的表示层、业务层和数据层构成。其中表示层向客户提供数据，业务层实施业务和数据规则，数据层定义数据访问标准。该体系结构具有许多优点，如逻辑上相对独立，不同层可以用不同的平台、软件和开发语言，而系统的安装、修改和维护在各层都可能进行。', '6', '');
INSERT INTO `storage` VALUES ('28', '7', '2017032', '00', '在设计软件的模块结构时，（32）不能改进设计质量。', '尽量减少高扇出结构,模块的大小适中,将具有相似功能的模块合并,完善模块的功能', 'C', '在软件设计中，人们总结了一些启发式原则，根据这些原则进行设计，可以设计出较高质量的软件系统。其中，模块的扇入扇出适中，模块大小适中以及完善模块功能都可以改进设计质量。而将相似功能的模块合并可能会降低模块内聚和提高模块之间的耦合，因此并不能改进设计质量。', '6', '');
INSERT INTO `storage` VALUES ('29', '7', '201703334', '00', '模块A、B和C有相同的程序块，块内的语句之间没有任何联系，现把该程序块取出来，形成新的模块D，则模块D的内聚类型为（33）内聚。以下关于该内聚类型的叙述中，不正确的是（34）。', '巧合,逻辑,时间,过程,具有最低的内聚性,不易修改和维护,不易理解,不影响模块间的耦合关系', 'A,D', '', '6', '');
INSERT INTO `storage` VALUES ('30', '7', '2017101', '00', '在程序的执行过程中，Cache与主存的地址映射是由（1）完成的。', '操作系统,程序员调度,硬件自动,用户软件', 'C', 'Cache与主存之间的地址映射由硬件自动完成，以保证高的处理速度。', '1', '');
INSERT INTO `storage` VALUES ('31', '7', '2017102', '00', '某四级指令流水线分别完成取指、取数、运算、保存结果四步操作。若完成上述操作的时间依次为8ns、9ns、4ns、8ns，则该流水线的操作周期应至少为（2）ns。', '4,8,9,33', 'C', '指令流水线的操作周期应为“瓶颈段所需时间，因此至少为9ns。', '1', '');
INSERT INTO `storage` VALUES ('32', '7', '2017103', '00', '内存按字节编址。若用存储容量为32K×8bit的存储器芯片构成地址从A0000H到DFFFFH的内存，则至少需要（3）片芯片。', '4,8,16,32', 'B', '存储单元数为DFFFF-A0000+1=40000H（即218）个，需要的芯片数为218/215=23，即8个。', '1', '');
INSERT INTO `storage` VALUES ('33', '7', '2017104', '00', '计算机系统的主存主要是由（4）构成的。', 'DRAM,SRAM,Cache,EEPROM', 'A', '', '1', '');
INSERT INTO `storage` VALUES ('34', '7', '2017105', '00', '以下关于海明码的叙述中，正确的是（5）。', '海明码利用奇偶性进行检错和纠错,海明码的码距为1,海明码可以检错但不能纠错,海明码中数据位的长度与校验位的长度必须相同\'', 'A', '', '1', '');
INSERT INTO `storage` VALUES ('35', '7', '2017106', '00', '计算机运行过程中，CPU需要与外设进行数据交换。采用（6）控制技术时，CPU与外设可并行工作。', '程序查询方式和中断方式,中断方式和DMA方式,程序查询方式和DMA方式,程序查询方式、中断方式和DMA方式', 'B', '', '1', '');
INSERT INTO `storage` VALUES ('36', '7', '201710708', '01', '与HITP相比，HTTPS协议对传输的内容进行加密，更加安全。HTTPS基于（7）安全协议，其默认端口是（8）。', 'RSA,DES,SSL,SSH,1023,443,80,8080', 'C,B', 'HTTPS 协议是经过使用SSL技术将索要传输的数据进行加密之后传输的安全的超文本传输协议，使用TCP协议443号端口。HTTP协议使用明文来传输超文本数据，安全性较差。', '2', '');
INSERT INTO `storage` VALUES ('37', '7', '2017109', '00', '下列攻击行为中，属于典型被动攻击的是（9）。', '拒绝服务攻击,会话拦截,系统干涉,修改数据命令', 'B', '攻击（DoS）、分布式拒绝服务（DDoS）、信息篡改、资源使用、欺骗、伪装、重放等攻击方法。', '2', '');
INSERT INTO `storage` VALUES ('38', '7', '2017110', '00', '（10）不属于入侵检测技术。', '专家系统,模型检测,简单匹配,漏洞扫描', 'D', '入侵检测技术包括专家系统、模型检测、简单匹配；漏洞扫描不是入侵检测的内容。', '2', '');
INSERT INTO `storage` VALUES ('39', '7', '2018001', '00', '浮点数的表示分为阶和尾数两部分。两个浮点数相加时，需要先对阶，即（1）（n为阶差的绝对值）。', '将大阶向小阶对齐，同时将尾数左移n位,将大阶向小阶对齐，同时将尾数右移n位,将小阶向大阶对齐，同时将尾数左移n位,将小阶向大阶对齐，同时将尾数右移n位', 'D', '', '1', '');
INSERT INTO `storage` VALUES ('40', '7', '201800203', '01', '计算机运行过程中，遇到突发事件，要求CPU暂时停止正在运行的程序，转去为突发事件服务，服务完毕，再自动返回原程序继续执行，这个过程称为（2），其处理过程中保存现场的目的是（3）。', '阻塞,中断,动态绑定,静态绑定,防止丢失数据,防止对其他部件造成影响,返回去继续执行原程序,为中断处理程序提供数据', 'B,C', '', '1', '');
INSERT INTO `storage` VALUES ('41', '7', '2018006', '00', '流水线的吞吐率是指单位时间流水线处理的任务数，如果各段流水的操作时间不同，则流水线的吞吐率是（6）的倒数。', '最短流水段操作时间,各段流水的操作时间总和,最长流水段操作时间,流水段数乘以最长流水段操作时间', 'C', '', '1', '');
INSERT INTO `storage` VALUES ('42', '7', '2018007', '00', '网络管理员通过命令行方式对路由器进行管理，需要确保ID、口令和会话内容的保密性，应采取的访问方式是（7）', '控制台,AUX,TELNET,SSH', 'D', '', '2', '');
INSERT INTO `storage` VALUES ('43', '7', '201800809', '01', '在安全通信中，S将所发送的信息使用（8）进行数字签名，T收到该消息后可利用（9）验证该消息的真实性。', 'S的公钥,S的私钥,T的公钥,T的私钥,S的公钥,S的私钥,T的公钥,T的私钥', 'B,A', '', '2', '');
INSERT INTO `storage` VALUES ('44', '7', '2018010', '00', '在网络安全管理中，加强内防内控可采取的策略有（10）。\\n①控制终端接入数量\\n②终端访问授权，防止合法终端越权访问\\n③加强终端的安全检查与策略管理\\n④加强员工上网行为管理与违规审计\\n', '②③,②④,①②③④,②③④', 'D', '', '2', '');
INSERT INTO `storage` VALUES ('45', '7', '2018011', '00', '攻击者通过发送一个目的主机已经接收过的报文来达到攻击目的，这种攻击方式属于（11）攻击。', '重放,拒绝服务,数据截获,数据流分析', 'A', '', '2', '');
INSERT INTO `storage` VALUES ('46', '7', '2018101', '00', 'CPU在执行指令的过程中，会自动修改（1）的内容，以便使其保持的总是将要执行的下一条指令的地址。', '指令寄存器,程序计数器,地址寄存器,指令译码器', 'B', '', '1', '');
INSERT INTO `storage` VALUES ('47', '7', '2018102', '00', '在微机系统中，BIOS（基本输入输出系统）保存在（2）中。', '主板上的ROM,CPU的寄存器,主板上的RAM,虚拟存储器', 'A', 'BIOS（基本输入输出系统）是装在计算机硬件系统中最基本的软件代码，为计算机提供最底层最直接的硬件设置和控制，即使关机或掉电，其内容也不会丢失，它保存在主板上的ROM（只读存储芯片）中。', '1', '');
INSERT INTO `storage` VALUES ('48', '7', '2018103', '00', '采用n位补码（包含一个符号位）表示数据，（3）。', '可以直接表示数值2,可以直接表示数值-2,可以直接表示数值2-1,可以直接表示数值-2-1', 'D', '', '1', '');
INSERT INTO `storage` VALUES ('49', '7', '2018105', '00', '以下关于采用一位奇校验方法的叙述中，正确的是（5）。', '若所有奇数位出错，则可以检测出该错误但无法纠正错误,若所有偶数位出错，则可以检测出该错误并加以纠正,若有奇数个数据位出错，则可以检测出该错误但无法纠正错误,若有偶数个数据位出错，则可以检测出该错误并加以纠正', 'C', '', '1', '');
INSERT INTO `storage` VALUES ('50', '7', '2018106', '00', '下列关于流水线方式执行指令的叙述中，不正确的是（6）。', '流水线方式可提高单条指令的执行速度,流水线方式下可同时执行多条指令,流水线方式提高了各部件的利用率,流水线方式提高了指令的吞吐率', 'A', '显然，对于单条指令而言，其执行过程中的任何一步都不能省却且需按顺序执行，所以“流水线方式可提高单条指令的执行速度的说法是错误的。', '1', '');
INSERT INTO `storage` VALUES ('51', '7', '2018107', '00', 'DES是（7）算法。', '公开密钥加密,共享密钥加密,数字签名,认证', 'B', '', '1', '');
INSERT INTO `storage` VALUES ('52', '7', '2018108', '00', '计算机病毒的特征不包括（8）。', '传染性,触发性,隐蔽性,自毁性', 'D', '', '1', '');
INSERT INTO `storage` VALUES ('53', '7', '201810910', '01', 'MD5是（9）算法，对任意长度的输入计算得到的结果长度为（10）位。', '路由选择,摘要,共享密钥,公开密钥,56,128,140,160', 'B,D', '', '1', '');
INSERT INTO `storage` VALUES ('54', '7', '2018111', '00', '使用Web方式收发电子邮件时，以下描述错误的是（11）。', '无须设置简单邮件传输协议,可以不设置账号密码登录,邮件可以插入多个附件,未发送邮件可以保存到草稿箱', 'B', '使用Web方式收发电子邮件时，必须输入账号密码才能登录。Web方式无须设置简单邮件传输协议。电子邮件可以插入多个附件，未发送的邮件也可以保存到草稿箱。', '2', '');
INSERT INTO `storage` VALUES ('55', '7', '2018131', '00', '在ISO/IEC 9126软件质量模型中，可靠性质量特性是指在规定的一段时间内和规定的条件下，软件维持在其性能水平有关的能力，其质量子特性不包括（31）', '安全性,成熟性,容错性,易恢复性', 'A', '', '6', '');
INSERT INTO `storage` VALUES ('56', '7', '2018132', '00', '以下关于模块化设计的叙述中，不正确的是（32）', '尽量考虑高内聚、低耦合，保持模块的相对独立性,模块的控制范围在其作用范围内,模块的规模适中,模块的宽度、深度、扇入和扇出适中', 'B', '', '6', '');
INSERT INTO `storage` VALUES ('57', '7', '2018133', '00', '某企业管理信息系统中，采购子系统根据材料价格、数量等信息计算采购的金额，并给财务子系统传递采购金额、收款方和采购日期等信息，则这两个子系统之间的耦合类型为（33）耦合。', '数据,标记,控制,外部', 'D', '', '6', '');
INSERT INTO `storage` VALUES ('58', '7', '2019001', '00', '计算机执行指令的过程中，需要由（1）产生每条指令的操作信号并将信号送往相应的部件进行处理，以完成指定的操作。', 'CPU的控制器,CPU的运算器,DMA控制器,Cache 控制器', 'A', '', '1', '');
INSERT INTO `storage` VALUES ('59', '7', '2019002', '00', 'DMA控制方式是在（2）之间直接建立数据通路进行数据的交换处理。', 'CPU与主存,CPU与外设,主存与外设,外设与外设', 'C', '', '1', '');
INSERT INTO `storage` VALUES ('60', '7', '2019003', '00', 'CPU访问存储器时，被访问数据一般聚集在一个较小的连续存储区域中。若一个存储单元已被访问，则其邻近的存储单元有可能还要被访问，该特性被称为（3）。', '数据局部性,指令局部性,空间局部性,时间局部性', 'C', '', '1', '');
INSERT INTO `storage` VALUES ('61', '7', '2019004', '00', '某系统由3个部件构成，每个部件的千小时可靠度都为R，该系统的千小时可靠度为（1-（1-R））R，则该系统的构成方式是（4）。', '3个部件串联,3个部件并联,前两个部件并联后与第三个部件串联,第一个部件与后两个部件并联构成的子系统串联', 'C', '', '1', '');
INSERT INTO `storage` VALUES ('62', '7', '2019005', '00', '在（5）校验方法中，采用模2运算来构造校验位。', '水平奇偶,垂直奇偶,海明码,循环冗余', 'D', '循环冗余校验码（Cyclic Redundancy Check，CRC）广泛应用于数据通信领域和磁介质存储系统中。它利用生成多项式为k个数据位产生r个校验位来进行编码，在求CRC编码时，采用的是模2运算。', '1', '');
INSERT INTO `storage` VALUES ('63', '7', '2019006', '00', '以下关于RISC（精简指令系统计算机）技术的叙述中，错误的是（6）。', '指令长度固定、指令种类尽量少,指令功能强大、寻址方式复杂多样,增加寄存器数目以减少访存次数,用硬布线电路实现指令解码，快速完成指令译码', 'B', '', '1', '');
INSERT INTO `storage` VALUES ('64', '7', '2019007', '00', '（7）防火墙是内部网和外部网的隔离点，它可对应用层的通信数据流进行监控和过滤。', '包过滤,应用级网关,数据库,Web', 'B', '', '2', '');
INSERT INTO `storage` VALUES ('65', '7', '2019008', '00', '下述协议中与安全电子邮箱服务无关的是（8）。', 'SSL,HTTPS,MIME,PGP', 'C', '', '2', '');
INSERT INTO `storage` VALUES ('66', '7', '2019101', '00', '在CPU内外常设置多级高速缓存（Cache），其主要目的是（1）', '扩大主存的存储容量,提高CPU访问主存数据或指令的效率,扩大存储系统的容量,提高CPU访问外存储器的速度', 'B', '', '1', '');
INSERT INTO `storage` VALUES ('67', '7', '2019103', '00', '计算机运行过程中，进行中断处理时需保存现场，其目的是（3）', '防止丢失中断处理程序的数据,\'防止对其他程序的数据造成破坏,能正确返回被中断的程序继续执行,能为中断处理程序提供所需的数据', 'C', '', '1', '');
INSERT INTO `storage` VALUES ('68', '7', '201910405', '01', '内存按字节编址。地址从A0000H到CFFFFH的内存，共有（4）字节。若用存储容量为64KX8bit的存储器芯片构成该内存空间，至少需要（5）片。', '80KB ,96KB,160KB,192KB,2,3,5,8', 'D,B', 'CFFFFH-A0000H = 2FFFF，起始地址A0000H到终止地址CFFFFH共有30000H（2FFFF+1）个单元，按字节编址时，就是30000H个字节（217+216），以K（210）为单位表示，就是192（27+29）KB，若用容量为64KX8bit（即64KB）的存储芯片构造，需要3片（192/64）。', '1', '');
INSERT INTO `storage` VALUES ('69', '7', '2019106', '00', '执行指令时，将每一条指令都分解为取指、分析和执行三步。已知取指时间f指=5At，分析时间t分析=2At，执行时间t执行=3At。如果按照[执行][分析]k+1、[取指]k+2重叠的流水线方式执行指令，从头到尾执行完500条指令需（6）At。', '2.5002505251e+015', 'B', '', '1', '');
INSERT INTO `storage` VALUES ('70', '7', '2019107', '00', '下列协议中，与电子邮箱服务的安全性无关的是（7）。', 'SSL,HTTPS,MIME,PGP', 'C', '', '2', '');
INSERT INTO `storage` VALUES ('71', '7', '2019108', '00', '下列算法中，不属于公开密钥加密算法的是（8）', 'ECC,DSA,RSA,DES', 'D', 'ECC、DSA 和RSA均属于公开密钥加密算法，DES是共享密钥加密算法。', '2', '');
INSERT INTO `storage` VALUES ('72', '7', '2018025', '00', '若系统在将（25）文件修改的结果写回磁盘时发生崩溃，则对系统的影响相对较大。', '目录,空闲块,用户程序,用户数据', 'A', null, null, null);

-- ----------------------------
-- Table structure for `subject`
-- ----------------------------
DROP TABLE IF EXISTS `subject`;
CREATE TABLE `subject` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `level` int(11) NOT NULL COMMENT '1 高级 2 中级 3初级',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=28 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of subject
-- ----------------------------
INSERT INTO `subject` VALUES ('1', '信息系统项目管理师', '3');
INSERT INTO `subject` VALUES ('2', '系统分析师', '3');
INSERT INTO `subject` VALUES ('3', '系统架构设计师', '3');
INSERT INTO `subject` VALUES ('4', '网络规划设计师', '3');
INSERT INTO `subject` VALUES ('5', '系统规划与管理师', '3');
INSERT INTO `subject` VALUES ('6', '软件测评师', '2');
INSERT INTO `subject` VALUES ('7', '软件设计师', '2');
INSERT INTO `subject` VALUES ('8', '软件过程能力评估师', '2');
INSERT INTO `subject` VALUES ('9', '网络工程师', '2');
INSERT INTO `subject` VALUES ('10', '多媒体应用设计师', '2');
INSERT INTO `subject` VALUES ('11', '嵌入式系统架构师', '2');
INSERT INTO `subject` VALUES ('12', '计算机辅助设计师', '2');
INSERT INTO `subject` VALUES ('13', '电子商务设计师', '2');
INSERT INTO `subject` VALUES ('14', '系统集成项目管理工程师', '2');
INSERT INTO `subject` VALUES ('15', '信息系统监理师', '2');
INSERT INTO `subject` VALUES ('16', '信息安全工程师', '2');
INSERT INTO `subject` VALUES ('17', '数据库系统工程师', '2');
INSERT INTO `subject` VALUES ('18', '信息系统管理工程师', '2');
INSERT INTO `subject` VALUES ('19', '计算机硬件工程师', '2');
INSERT INTO `subject` VALUES ('20', '信息技术支持工程师', '2');
INSERT INTO `subject` VALUES ('21', '程序员', '3');
INSERT INTO `subject` VALUES ('22', '网络管理员', '3');
INSERT INTO `subject` VALUES ('23', '多媒体应用制作技术员', '3');
INSERT INTO `subject` VALUES ('24', '电子商务技术员', '3');
INSERT INTO `subject` VALUES ('25', '信息系统运行管理员', '3');
INSERT INTO `subject` VALUES ('26', '网页制作员', '3');
INSERT INTO `subject` VALUES ('27', '信息处理技术员', '3');

-- ----------------------------
-- Table structure for `user`
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user` (
  `open_id` varchar(255) NOT NULL COMMENT 'openid',
  `nick_name` varchar(255) DEFAULT NULL COMMENT '用户昵称',
  `quantity_and_odds` varchar(10) DEFAULT NULL COMMENT '[‘刷题量’，''正确率'']',
  `collects` varchar(255) DEFAULT NULL COMMENT '收藏题目 qid',
  `errors` varchar(255) DEFAULT NULL COMMENT '错题集 qid',
  `update_time` datetime(1) NOT NULL,
  `create_time` datetime(1) NOT NULL,
  PRIMARY KEY (`open_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES ('oXA915XkOJrGYF9tEIMsJNcWgH5s', 'YINA', '2,0', '1,2', '2,3,31', '2022-11-25 14:45:48.4', '2022-11-04 19:15:57.6');
